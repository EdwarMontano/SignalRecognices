import matplotlib.gridspec as gridspec
import matplotlib.pyplot as plt
import numpy as np
from scipy.signal import medfilt
from scipy.interpolate import make_interp_spline
import seaborn as sns
from sklearn.metrics import confusion_matrix





# np.random.seed(0)
fig = plt.figure(tight_layout=True)
gs = gridspec.GridSpec(3, 2)

class DataseTwoClass1D:

    def __init__(self,promedio1,promedio2,varianza1,varianza2,muestras):
        self.promedio1 = promedio1
        self.promedio2 = promedio2
        self.varianza1 = varianza1
        self.varianza2 = varianza2
        self.muestras  = muestras

    def generarData(self):
        np.random.seed(0)       
        mu = np.array([self.promedio1, self.promedio2])  # mean of the distribution
        SIG = np.array([[self.varianza1 , 0], [0, self.varianza2]])  # covariance matrix of the distribution
        datos =  np.random.multivariate_normal(mu, SIG, self.muestras)
        r1=datos[:,0]
        r2=datos[:,1]
        r1=np.array([-0.508487645881438, -0.0801564165238151, 0.130794253117701, 0.303708267212011, 0.377108508842939, 0.434433690523405, 0.459801770402922, 0.556005413671582, 0.570770693561832, 0.575685768233732, 0.782267833288062, 0.784950927225885, 0.798489604169105, 0.828127682783125, 0.840075909901501, 0.861496489765499, 0.866695013710974, 0.888346772312186, 1.00573130226562, 1.01853433463561, 1.05020700505370, 1.05479725710121, 1.14894303904603, 1.22923306439805, 1.23393689836156, 1.23442389368039, 1.27233599940027, 1.27829788328030, 1.28900501136568, 1.28971584470665, 1.29100298646871, 1.29173050619072, 1.29342832699943, 1.30057307827956, 1.30498115319843, 1.32501510168669, 1.32512992093746, 1.36599177261055, 1.37640806104188, 1.38357633959284, 1.38998941909829, 1.40610032691633, 1.43464600449060, 1.44200938047509, 1.48827887813956, 1.49561467301588, 1.55287462622946, 1.57248236688705, 1.57676238806668, 1.59051979785609, 1.63161329344109, 1.63271232521257, 1.64408097376094, 1.64602462301197, 1.65959551773247, 1.68778943688952, 1.70508961011678, 1.72146133763020, 1.72511537007146, 1.73916572727091, 1.74299093902429, 1.74962177142075, 1.76697675891060, 1.76768488022779, 1.76995455131629, 1.77622755017719, 1.79541365573751, 1.80373674146259, 1.81634924814231, 1.81788964486706, 1.83141887565807, 1.83276789904509, 1.85291677465924, 1.85384101797489, 1.87129227335094, 1.90039342780703, 1.90634026714863, 1.92431613128264, 1.92503151409368, 1.92525578804993, 1.92688643212017, 1.95331125776089, 1.96945997246682, 1.97298936020940, 1.99777938170389, 2.00483553307149, 2.02616084765678, 2.03419730540916, 2.03889567128331, 2.05212383361140, 2.06120262569659, 2.07518255519613, 2.07964088006093, 2.08296725332791, 2.08878237479271, 2.09284174126400, 2.10355468095623, 2.11709464412650, 2.12808622832286, 2.13755811165299, 2.14655268235588, 2.15233306302612, 2.15752833338744, 2.16168530524547, 2.17795638545971, 2.18004467951117, 2.18388946368298, 2.18738311573136, 2.18925093200987, 2.19718487855079, 2.20482246525152, 2.21238329449390, 2.21291348685114, 2.21347143204090, 2.21854137374708, 2.21942383225240, 2.24058358577528, 2.26522875319335, 2.26840352396105, 2.28271056064143, 2.28496889585902, 2.29553704580846, 2.29845379539855, 2.30452331057855, 2.32737043137199, 2.32744157210463, 2.33090556687870, 2.33833708428932, 2.34003880533813, 2.35373009952738, 2.35491231559593, 2.35714006509965, 2.37072280581573, 2.37378274567363, 2.37820513588670, 2.37999637057249, 2.39580309849085, 2.39585022113589, 2.40060947709096, 2.40387521334654, 2.40496970116203, 2.42258671008783, 2.42770422721071, 2.43117731040594, 2.45220349130751, 2.45603049188140, 2.46301429315853, 2.47606437359390, 2.47657235901325, 2.49871752971857, 2.50158094531204, 2.50183846517970, 2.50769852661030, 2.52022672924315, 2.52048888991738, 2.54375845684984, 2.55012389083087, 2.55069135945213, 2.55956296848043, 2.59306923368040, 2.59921078125185, 2.60557355870520, 2.61478605843249, 2.62794267970140, 2.63211631568298, 2.63634547294307, 2.63734580897454, 2.63807377627777, 2.64438240503547, 2.65230438595581, 2.66225521272752, 2.66842883858301, 2.68649622405149, 2.70332018061091, 2.71085155806387, 2.72102390014760, 2.73651732278809, 2.74450399892705, 2.75276075448030, 2.76047474866759, 2.78756472725796, 2.79460443591193, 2.80197029992540, 2.80462345428276, 2.80956169050043, 2.81819925966667, 2.82830531633682, 2.85281149085473, 2.85940437188258, 2.87011392691498, 2.87586638953491, 2.88346913045478, 2.89272397533741, 2.89589257090979, 2.89715193395030, 2.90172972385710, 2.91186498462103, 2.91253440164575, 2.91838482693517, 2.93062536585563, 2.93678291215133, 2.97013161098199, 2.99012653633514, 2.99290143692516, 2.99301439909645, 3.00071017102840, 3.01180311589502, 3.01692822789052, 3.02225052791026, 3.02556833556116, 3.03359703643398, 3.03827630714438, 3.03916298197470, 3.05036040975936, 3.05281419373701, 3.05420925291887, 3.06361111495759, 3.08105148242375, 3.08829276061045, 3.09057064591728, 3.09763456324639, 3.12055780058684, 3.12689770514195, 3.13358655407617, 3.14312804934937, 3.14792212887320, 3.15027229671378, 3.15917972418906, 3.16374993924361, 3.17183987321923, 3.17490908319848, 3.18115186235493, 3.18856004698589, 3.20494657058496, 3.22782015033219, 3.23037730057864, 3.24410097395169, 3.24716185499147, 3.25761809612945, 3.26556150738774, 3.26677874500239, 3.28913004585634, 3.30299515410524, 3.32817702623644, 3.32941723083343, 3.34847716225462, 3.36224860006739, 3.37126714560912, 3.38263387388318, 3.39848295751120, 3.40317424976635, 3.40447844779455, 3.40730154636493, 3.41032785359178, 3.41546950161631, 3.43707626446572, 3.43845173811460, 3.44652587322015, 3.48170757267124, 3.48332881279741, 3.49827169377411, 3.53130628223528, 3.54049659030715, 3.54282810169381, 3.54359544876391, 3.54983248568363, 3.56136621344646, 3.57760581878854, 3.60468332224859, 3.61791914823103, 3.62288127398116, 3.62958962536416, 3.63274031564316, 3.63909444268288, 3.64096084312273, 3.66082472192626, 3.67177018032803, 3.68385568874101, 3.68970104365220, 3.69734963757345, 3.70077747836849, 3.70558091009001, 3.71356335525907, 3.71422834209789, 3.71998085053787, 3.72658351607414, 3.72969964769823, 3.73224739970811, 3.74491293684354, 3.77492055735595, 3.77914664367525, 3.78273019514352, 3.78781701018496, 3.79367539301709, 3.79676687729985, 3.79956567650800, 3.81641017483106, 3.83689268255642, 3.85045051596181, 3.88045913663960, 3.88449066544665, 3.88658560638845, 3.90527813076428, 3.90548016782452, 3.91422645080656, 3.92392842291479, 3.93386741209727, 3.94082132488728, 3.95992518595795, 3.98796583453628, 3.99946130085455, 4.02966516375083, 4.03316090437290, 4.04397014409190, 4.07978630412159, 4.08336829001622, 4.09114071179557, 4.11188462183063, 4.12130253425798, 4.14626595180424, 4.14948034679840, 4.16494779332888, 4.16744772435108, 4.20259817116941, 4.23039366846315, 4.23395265678519, 4.25252082092890, 4.26347934310828, 4.27194666659916, 4.28849153918734, 4.29254623866248, 4.29330545838541, 4.33338512265344, 4.34601993413633, 4.35948551178794, 4.37281857024290, 4.38192067730178, 4.38237182916357, 4.38520979536921, 4.38844222177760, 4.39163125362559, 4.40400759731170, 4.40811199006713, 4.41700815903220, 4.42717012865686, 4.43854037206911, 4.47886401303754, 4.48455669326064, 4.51420251160951, 4.52325371383854, 4.52944709980037, 4.53217091438086, 4.53359902436665, 4.54215417651886, 4.56890544753431, 4.58040141470713, 4.60432850599713, 4.61158780213768, 4.62416636894657, 4.66181438338426, 4.71132921322937, 4.72354538375375, 4.73371104697792, 4.74669937375215, 4.75037992439609, 4.75205771374320, 4.76178785981484, 4.77036318874051, 4.87304341088771, 4.89084117232342, 4.90085124472336, 4.91094548251234, 4.93618021024132, 4.95477436660347, 4.95650227676502, 4.97980916117564, 4.99065780190945, 5.00565400410352, 5.03412833196359, 5.05246845379321, 5.08328772675563, 5.09068652969645, 5.17836640616038, 5.20927069142118, 5.20959581371141, 5.24547284063884, 5.25152359534108, 5.42144665449855, 5.45562450906735, 5.58476739188709, 5.64114148711896, 5.67611206358997, 5.73970997168389, 5.74164087002270, 5.81150549276647, 5.86008061430612, 6.05786399154352, 6.22057549696907, 6.22223666546970, 7.08375142555270])
        r2=np.array([1.34714683929981,1.69330974537294,2.31116842016879,2.93027308375119,3.25916676147237,3.50895692401868,3.71278102205114,3.74779326304696,3.85857914789322,3.88703574804643,3.89435888767540,3.91309250861459,3.91941491469966,3.94928942694999,4.00779455810823,4.02757670926091,4.10739323032755,4.11686883344642,4.13250382936338,4.26061719170166,4.32847935267428,4.36661419837937,4.38435428313455,4.38657122169620,4.44638201927049,4.44782247704017,4.48405549507561,4.50498848705323,4.50903270667938,4.55164258783093,4.65225203340705,4.67353692964868,4.72165770297528,4.82260520115497,4.82308075541994,4.83205926275356,4.83612467763667,4.84076449511766,4.87718145368507,4.87924348321807,4.89349301690731,4.90107835593737,4.93061076961452,4.97939251555384,4.97969709656481,5.03034771043590,5.06036058359383,5.08607115774737,5.08749691849358,5.14437477967422,5.18321521972819,5.21422526445929,5.29745240525968,5.31716723033796,5.35460857697123,5.35952047869935,5.37940432073327,5.41200780895237,5.41350645420138,5.42597540782080,5.43175019409357,5.45127788046513,5.46004421041447,5.51993413500540,5.53749478112026,5.56051655158277,5.59351698646940,5.59768245786908,5.63011611815846,5.63532488049333,5.65334994860296,5.65705781507702,5.67968400204708,5.68683691738653,5.73065096092283,5.73455680691045,5.73798100659691,5.76203638285036,5.77217513705073,5.79937052000102,5.83784300216350,5.84705383155800,5.89350404292965,5.89487845263168,5.90858004002926,5.93399153334642,5.96329050714261,5.97078692648668,5.97931810092682,5.99269479920461,5.99727968907647,6.00876883845967,6.04213605810848,6.06424809418446,6.07214736444792,6.08078552151588,6.08812353976420,6.09058808971886,6.09060453387648,6.09239439793139,6.09846194428558,6.10237692642203,6.10319776813625,6.10441009344739,6.12683167425165,6.13384182063118,6.13909433133031,6.13943489647859,6.14191937870126,6.14327625577775,6.14747070025430,6.15715924382418,6.16234634384272,6.17064948297410,6.18910012494229,6.19121737085604,6.19553994096937,6.19702745564074,6.20875669067588,6.21262004722274,6.23975873494569,6.25632723406147,6.27016010152004,6.27997654095080,6.29220384781964,6.31638372115527,6.33517282609483,6.33525636446665,6.34852936861528,6.36501575895947,6.37170405955077,6.38642198197548,6.39188918168014,6.39683567950370,6.40970137524281,6.41343107303977,6.41890309899413,6.41911311911057,6.43435068982648,6.43698877725483,6.43708402776692,6.44275237341565,6.44573044516635,6.49502856038184,6.52020766082464,6.52372186358658,6.53207239027834,6.53584713936254,6.54006629180254,6.54877179617981,6.57966618662702,6.58110012773092,6.58303960923080,6.58385263051934,6.59703894061899,6.60197246552436,6.60268060187861,6.61286662211678,6.61313866612557,6.62216110067773,6.62990323018870,6.63581487501127,6.65820757558173,6.65834460989404,6.67269385943967,6.70255986640165,6.70393919574857,6.71538975590070,6.72401384648632,6.72539311564417,6.72669412295937,6.73146320481757,6.74558167319970,6.76675552556423,6.79612439615842,6.80060540889659,6.80641189314754,6.82024625679457,6.84500919559896,6.84741789529219,6.85245654411096,6.85274225655763,6.85692529829931,6.86457397916406,6.86658845988444,6.87186382281739,6.87419173783452,6.88047777723598,6.89603793088401,6.90454279117905,6.90505604122037,6.91002326398094,6.91293766615554,6.92512453200485,6.92701394984562,6.94217708227122,6.94399100238387,6.94829091977885,6.95896129180547,6.97285713072816,6.97404580083118,6.97553818016381,6.98278954906572,6.98739599335758,7.00333011495512,7.00461108734730,7.01623986231663,7.01896532578294,7.04234099267253,7.05631030715246,7.06741455214678,7.09117222596796,7.09529473597922,7.10112766001420,7.10739128225400,7.13175602073368,7.15115105108594,7.15329392846200,7.16900215952982,7.16943021680828,7.18867117974983,7.19937786486092,7.20382107899118,7.25458696758628,7.26081664936163,7.27125727117505,7.27758816404861,7.30070287820958,7.30656019411453,7.30726577499253,7.31329866891245,7.31616188906772,7.33133847443066,7.33363449989977,7.34455928545923,7.34778941355734,7.35747187353079,7.36832501421752,7.37868512466115,7.40039021949016,7.44382312459921,7.45104334528883,7.45998912846302,7.46421154436378,7.46894992474934,7.49189951092885,7.50156937029472,7.50708918768901,7.51317857152056,7.52530032439937,7.53917878020650,7.54392334114117,7.56385475090086,7.57740794348229,7.59820957181214,7.60209595582800,7.60589353593108,7.60642549825561,7.62553789705350,7.63654548501839,7.64962218935677,7.66079607189723,7.68531364313209,7.70575951977201,7.74252414614850,7.75355844037046,7.76623551732715,7.77123892188851,7.77566628251808,7.79176465221454,7.83729977057281,7.84648436095277,7.84734066405869,7.86128331967279,7.88842913802928,7.91155613991551,7.91703183897115,7.91932672376296,7.92640726120920,7.93094495615596,7.94193017009661,7.94937637769530,7.98133206539404,7.98678201067444,8.01811556984685,8.02800742334186,8.06133934913808,8.07437916106900,8.07876469978177,8.08118979509287,8.09664440002958,8.10343382411051,8.10957510104719,8.11237424693242,8.12141832838885,8.12218667052849,8.12310737763891,8.12632975359239,8.14055914435284,8.14759908549513,8.17070729771713,8.18243925682598,8.19602469013931,8.20368697139089,8.20394509938608,8.23306717957682,8.25949731089517,8.26543197915362,8.27730589715886,8.28605311060816,8.28852405837490,8.29346970209251,8.29708239387939,8.30120736181096,8.30243702682423,8.31417811918665,8.35454815898324,8.37153868674863,8.37595589744396,8.38821766549356,8.39956198676113,8.44031062408286,8.46514250877909,8.46689809049106,8.46986778042434,8.47227050683623,8.47927289565197,8.49280745359656,8.49486456353526,8.50664164944637,8.51544438462484,8.51637909662045,8.54644306496897,8.55159624404990,8.55471768271395,8.57421220773271,8.58281756122972,8.62769848848512,8.63817134879786,8.66488538964479,8.67135265890685,8.68778455643004,8.70561464489036,8.70943590142089,8.71952094154042,8.74238720057326,8.75502612543227,8.76458973790900,8.83589800401279,8.84888057031619,8.86515511786466,8.86595164945766,8.86779733765185,8.88938658405720,8.89583424634686,8.90900245975306,8.91592681393367,8.92736093399581,8.94090691103346,8.94092235678976,8.97632007946209,9.00521433780176,9.04162826094037,9.07909809156942,9.09683428812448,9.10557446071544,9.11612344086919,9.14204588480203,9.17761989573044,9.19959989953105,9.20003453345166,9.21837908503253,9.28413699796456,9.35856894415629,9.40009065850401,9.40378479411755,9.41649588987021,9.44236015323841,9.50231004997199,9.51146994399853,9.54445707197733,9.58651761288411,9.64140937345108,9.66066797448023,9.68904286533097,9.74464903628265,9.75267136614199,9.84177058802931,9.89044627961615,9.99096846813452,10.0292201650360,10.2945768872787,10.4189609312660,10.5025400413527,10.8420460867381,11.1640046059049,11.2015797675481,11.5830272407274,11.7741763492318,11.8142972323221])
        return r1,r2



if __name__=='__main__':
    dataset=DataseTwoClass1D(5,7,1.5,2.5,400)#promedio1,promedio2,varianza1,varianza2,muestras
    r1,r2=dataset.generarData()
    ax = fig.add_subplot(gs[0, 0])
    ax.plot(r1,0.1*np.ones(dataset.muestras),'|')
    ax.plot(r2,-0.1*np.ones(dataset.muestras),'+')
    plt.ylim([-0.2,0.2])
    ax.set_ylabel('')
    ax.set_xlabel('X')
    ND1=dataset.muestras
    ND2=dataset.muestras
    Pw1=ND1/(ND1+ND2)
    Pw2=ND2/(ND1+ND2) 


    for i in range(2):
        if i == 0:
            ax = fig.add_subplot(gs[1, i])
            ax.set_xlabel('p(x|w1)')
            Nbin=ND1/10;
            delta1=(r1.max()-r1.min())/Nbin
            eje1=np.linspace(r1.min(), r1.max()-delta1, num=int(Nbin))
            n,bins=np.histogram(r1,bins=int(Nbin))
            pxw1a=n/(delta1*ND1)
            # pxw1=medfilt(pxw1a, kernel_size=5)            
            ax.plot(eje1, pxw1a)
            # ax.set_ylabel('YLabel1 %d'i+1)
            ax.tick_params(axis='x', rotation=55)
            ax = fig.add_subplot(gs[0, 1])
            R=np.concatenate((r1, r2))
            deltaR=(R.max()-R.min())/Nbin
            ejeR=np.linspace(R.min(), R.max(), num=int((ND1+ND2)/10))
            m,bins=np.histogram(R,bins=int((ND1+ND2)/10))
            pxw1aR=m/(deltaR*len(R))
            pxw1R=medfilt(pxw1aR, kernel_size=3)            
            ax.plot(ejeR, pxw1R)
            ax = fig.add_subplot(gs[2, 0])
            ax.set_xlabel('p(w1,x)= p(x|w1) P(w1)')
            ax.plot(eje1, pxw1a*Pw1)
            
            # plt.hist(r1,bins=int(Nbin) ,ec="yellow",color='blue', alpha=0.2)

        elif i == 1:
            ax = fig.add_subplot(gs[1, i])
            ax.set_xlabel('p(x|w2)')
            Nbin2=ND2/10;
            delta2=(r2.max()-r2.min())/Nbin
            eje2=np.linspace(r2.min(), r2.max()-delta2, num=int(Nbin2))
            n2,bins2=np.histogram(r2,bins=int(Nbin))
            pxw2a=n2/(delta2*ND2)
            # pxw2=medfilt(pxw2a, kernel_size=5)
            ax.plot(eje2, pxw2a,color='orange')
            ax = fig.add_subplot(gs[2, 1])
            ax.set_xlabel('P(w2,x)= p(x|w2) P(w2)')
            ax.plot(eje2, pxw2a*Pw2, color='orange')
            # plt.hist(r2,bins=int(Nbin2) ,ec="red",color='orange', alpha=0.2)


            # ax.set_ylabel('YLabel1 %d'i+1)
            ax.tick_params(axis='x', rotation=55)
        
        
    fig.align_labels() 
    plt.title('Distribuciones') 

    fig2 = plt.figure()
    
    # Define las clases y los datos de prueba
    classes = ['Clase 1', 'Clase 2', 'Clase 3']
    targets = ['Clase 1', 'Clase 2', 'Clase 3', 'Clase 1', 'Clase 2', 'Clase 3']
    outputs = ['Clase 1', 'Clase 2', 'Clase 3', 'Clase 2', 'Clase 2', 'Clase 3']

    # Calcula la matriz de confusión
    cm = confusion_matrix(targets, outputs, labels=classes)

    # Crea el plot de la matriz de confusión
    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=classes, yticklabels=classes)
    plt.title('Matriz de Confusión')
    plt.xlabel('Clase Predicha')
    plt.ylabel('Clase Real')
    plt.title('Matrix de confusión')
    plt.show()
